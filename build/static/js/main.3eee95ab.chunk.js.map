{"version":3,"sources":["assets/puff.svg","Callback/loading.svg","App.js","registerServiceWorker.js","queries/Queries.js","components/Todo.js","Loaders/TodoLoader.js","components/Todos.js","components/AddTodo.js","components/CompletedTodos.js","env.js","Content.js","Callback/Callback.js","history.js","Auth/auth0-variables.js","Auth/Auth.js","routes.js","index.js"],"names":["module","exports","__webpack_require__","p","App","route","this","props","history","replace","concat","auth","login","logout","isAuthenticated","react_default","a","createElement","className","type","data-toggle","data-target","aria-expanded","href","id","style","marginTop","onClick","bind","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","FetchAllQuery","gql","_templateObject","AddTodoQuery","_templateObject2","MarkCompletedQuery","_templateObject3","getCompletedQuery","_templateObject4","deleteQuery","_templateObject5","Todo","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","mark","e","$","css","text-decoration","variables","refetchQueries","query","del","_this","react_apollo_esm","mutation","_ref","data","completedTask","_ref2","data1","data-placement","title","deleteTodo","todo_name","TodoLoader","src","loader","width","height","Todos","loading","Loaders_TodoLoader","todos","length","map","todo","key","components_Todo","AddTodo","localStorage","getItem","addTodo","which","user_id","getUser","target","value","placeholder","onKeyPress","addnewTodo","vars","Content","components_AddTodo","components_Todos","CompletedTodos","Callback","position","display","justifyContent","top","bottom","left","right","backgroundColor","alt","createHistory","AUTH_CONFIG","domain","clientId","callbackUrl","Auth","auth0","WebAuth","clientID","redirectUri","responseType","scope","handleAuthentication","authorize","parseHash","err","authResult","accessToken","idToken","setSession","alert","expiresAt","JSON","stringify","expiresIn","Date","getTime","setItem","idTokenPayload","sub","removeItem","parse","httpLink","createHttpLink","uri","authLink","setContext","_","headers","token","objectSpread","authorization","client","ApolloClient","link","cache","InMemoryCache","addTypename","provideClient","component","routes","Router","Route","path","render","src_App_0","assign","src_Content","test","hash","src_Callback_Callback","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3eee95ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/puff.168fe125.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.c5590569.svg\";","import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  goTo(route) {\n    this.props.history.replace(`/${route}`)\n  }\n\n  login() {\n    this.props.auth.login();\n  }\n\n  logout() {\n    this.props.auth.logout();\n  }\n\n  render() {\n    const { isAuthenticated } = this.props.auth;\n    return (\n      <div className=\"App container-fluid\">\n        <nav className=\"navbar navbar-default\">\n          <div className=\"container-fluid\">\n            <div className=\"navbar-header\">\n              <button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\">\n                <span className=\"sr-only\">Toggle navigation</span>\n                <span className=\"icon-bar\"></span>\n                <span className=\"icon-bar\"></span>\n                <span className=\"icon-bar\"></span>\n              </button>\n              <a className=\"navbar-brand\" href=\"#\">Get Sh*t Done!</a>\n            </div>\n\n            <div className=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n              <ul className=\"nav navbar-nav navbar-right\">\n                {\n                  isAuthenticated() && (\n                      <li style={{ marginTop: '3%' }}>\n                        Welcome Back!\n                      </li>\n                    )\n                }\n                {\n                  isAuthenticated() && (\n                      <li>\n                        <button className=\"btn btn-default\" onClick={this.logout.bind(this)}>Logout</button>\n                      </li>\n                    )\n                }\n                {\n                  !isAuthenticated() && (\n                      <button className=\"btn btn-default\" onClick={this.login.bind(this)} style={{ marginTop: '5%' }}>Login</button>\n                    )\n                }\n              </ul>\n            </div>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import gql from \"graphql-tag\";\n\nexport const FetchAllQuery = gql`\n  {\n    todos (\n      where: { completed: { _eq: false }},\n      order_by: {id: desc}\n    ) {\n      id\n      todo_name\n      completed\n      user_id\n    }\n  }\n`;\n\nexport const AddTodoQuery = gql`\n  mutation addTodo($todo_name: String!, $user_id: String!) {\n    insert_todos(objects: [\n      {\n        todo_name: $todo_name,\n        user_id: $user_id\n        completed: false\n      }\n    ]) {\n      returning {\n        id\n        todo_name\n        completed\n        user_id\n      }\n    }\n  }\n`;\n\nexport const MarkCompletedQuery = gql`\n  mutation mark($id: Int!) {\n    update_todos(\n      where: {id: { _eq: $id }},\n      _set: { completed: true }\n    ) {\n      affected_rows\n    }\n  }\n`;\n\nexport const getCompletedQuery = gql`\n  {\n    todos(\n      where: { completed: {_eq: true }},\n      order_by: {id: desc}\n    ) {\n      id\n      todo_name\n      completed\n      user_id\n    }\n  }\n`;\n\nexport const deleteQuery = gql`\n  mutation del($id: Int!) {\n    delete_todos(\n      where: {id: { _eq: $id }}\n    ) {\n      affected_rows\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport { Mutation } from \"react-apollo\";\nimport { FetchAllQuery, MarkCompletedQuery, getCompletedQuery, deleteQuery } from '../queries/Queries';\nimport '../App.css';\n\nclass Todo extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  completedTask(id, mark, e) {\n    $(\"#\" + id + \" h3\").css({ 'text-decoration': 'line-through'});\n    mark({\n      variables: { id: id },\n      refetchQueries: [{ query: FetchAllQuery }, { query: getCompletedQuery }]\n    })\n  }\n\n  deleteTodo(id, del, e) {\n    del({\n      variables: { id: id },\n      refetchQueries: [{ query: FetchAllQuery }, { query: getCompletedQuery }]\n    })\n  }\n\n  render() {\n    return (\n      <Mutation mutation={MarkCompletedQuery}>\n        {\n          (mark, { data }) => (\n            <div className=\"todos\" onClick={this.completedTask.bind(this, this.props.data.id, mark)} id={this.props.data.id}>\n              <Mutation mutation={deleteQuery}>\n                {\n                  (del, { data1 }) => (\n                    <div>\n                      <i className=\"fas fa-times-circle cross\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"click to delete\" onClick={this.deleteTodo.bind(this, this.props.data.id, del)}></i>\n                      <h3>{`${this.props.data.todo_name}`}</h3>\n                    </div>\n                  )\n                }\n              </Mutation>\n            </div>\n          )\n        }\n      </Mutation>\n    )\n  }\n}\n\nexport default Todo;\n","import React from 'react';\nimport loader from '../assets/puff.svg';\nimport '../App.css';\n\nconst TodoLoader = () => (\n  <div className=\"todo-loader\">\n    <img src={loader} width=\"50\" height=\"50\"/>\n    <br /><br />\n    <h4>Fetching the todos for you</h4>\n  </div>\n)\n\nexport default TodoLoader;\n","import React, { Component } from 'react';\nimport { Query } from \"react-apollo\";\nimport Todo from './Todo';\nimport { FetchAllQuery } from '../queries/Queries';\nimport '../App.css';\nimport TodoLoader from '../Loaders/TodoLoader';\n\nconst Todos = () => (\n  <Query query={FetchAllQuery}>\n  {\n    ({ loading, error, data }) => {\n      if(loading)\n        return <TodoLoader />\n      if(error)\n    return <p className=\"todo-list\">Error {console.log(error)}</p>;\n\n      if(data.todos.length == 0)\n        return <h3 className=\"todo-list\">Ace! All done! </h3>;\n\n      return data.todos.map((todo) => (\n        <div key={todo.id} className=\"todo-list\" data-toggle=\"tooltip\" data-placement=\"left\" title=\"click to mark completed\">\n          <Todo data={todo} />\n        </div>\n      ))\n    }\n  }\n  </Query>\n);\n\nexport default Todos;\n","import React, { Component } from 'react';\nimport { Query } from \"react-apollo\";\nimport { FetchAllQuery, AddTodoQuery, CompletedTodos, getCompletedQuery } from '../queries/Queries';\nimport { Mutation } from \"react-apollo\";\nimport '../App.css';\n\nclass AddTodo extends Component {\n  getUser() {\n    const sub = localStorage.getItem('sub');\n    return sub;\n  }\n\n  addnewTodo(addTodo, e) {\n    if(e.which === 13) {\n      const user_id = this.getUser();\n      console.log(user_id)\n      addTodo({\n        variables: { \n            todo_name: e.target.value, \n            user_id: user_id\n        },\n        refetchQueries: [{ query: FetchAllQuery }, { query: getCompletedQuery }]\n      })\n      .catch(function(error) {\n        console.log(error);\n        // setError(error.toString());\n      });\n      e.target.value = \"\";\n    }\n  }\n  render () {\n    return (\n      <Mutation mutation={AddTodoQuery}>\n        {\n          (addTodo, { data }) => (\n            <div>\n              <input type=\"text\" className=\"form-control inp-todo\" placeholder=\"What's on your mind?\" onKeyPress={this.addnewTodo.bind(this, addTodo)} />\n            </div>\n          )\n        }\n      </Mutation>\n    );\n  }\n}\n\nexport default AddTodo;\n","import React, { Component } from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Todo from './Todo';\nimport { getCompletedQuery } from '../queries/Queries';\nimport '../App.css';\nimport TodoLoader from '../Loaders/TodoLoader';\n\nconst Todos = () => (\n  <Query query={getCompletedQuery}>\n  {\n    ({ loading, error, data }) => {\n      if(loading)\n        return <p></p>\n      if(error)\n        return <p className=\"todo-list\">Error </p>;\n\n      return data.todos.map((todo) => (\n        <div key={todo.id} className=\"todo-list-completed\" data-toggle=\"tooltip\" data-placement=\"left\" title=\"already marked completed\">\n          <Todo data={todo} />\n        </div>\n      ))\n    }\n  }\n  </Query>\n);\n\nexport default Todos;\n","export const vars = {\n    \"GRAPHQL_ENDPOINT\": 'https://shraddhaag-todo.herokuapp.com/v1/graphql',\n    \"DOMAIN\": \"shraddhaag.auth0.com\", //app.autho.com\n    \"CLIENT_ID\": \"3q6jY11RBz5BKF2YoBKxcF7Ep8vKcsfx\",\n    \"CALLBACK_URL\": \"https://shraddhaag-todo-react.herokuapp.com/callback\"\n  }","import React, { Component } from 'react';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport CompletedTodos from './components/CompletedTodos';\nimport { vars } from './env';\nimport './App.css';\n\n\nclass Content extends Component {\n  login() {\n    this.props.auth.login();\n  }\n  render() {\n    const { isAuthenticated } = this.props.auth;\n    return (\n      isAuthenticated() && (\n        <div className=\"App container-fluid\">\n          <h1 className=\"title\">Your Todos</h1>\n          <div className=\"col-md-2\"></div>\n          <div className=\"col-md-8\">\n            <AddTodo />\n            <Todos />\n            <CompletedTodos />\n          </div>\n          <div className=\"col-md-2\"></div>\n        </div>\n      )\n    );\n  }\n}\n\nexport default Content;\n","import React, { Component } from 'react';\nimport loading from './loading.svg';\n\nclass Callback extends Component {\n  render() {\n    const style = {\n      position: 'absolute',\n      display: 'flex',\n      justifyContent: 'center',\n      height: '100vh',\n      width: '100vw',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'white',\n    }\n\n    return (\n      <div style={style}>\n        <img src={loading} alt=\"loading\"/>\n      </div>\n    );\n  }\n}\n\nexport default Callback;","import createHistory from 'history/createBrowserHistory'\n\nexport default createHistory()\n","import { vars } from '../env';\n\nexport const AUTH_CONFIG = {\n  domain: vars.DOMAIN,\n  clientId: vars.CLIENT_ID,\n  callbackUrl: vars.CALLBACK_URL\n}\n","import history from '../history';\nimport auth0 from 'auth0-js';\nimport { AUTH_CONFIG } from './auth0-variables';\n\nexport default class Auth {\n  auth0 = new auth0.WebAuth({\n    domain: AUTH_CONFIG.domain,\n    clientID: AUTH_CONFIG.clientId,\n    redirectUri: AUTH_CONFIG.callbackUrl,\n    responseType: 'token id_token',\n    scope: 'openid'\n  });\n\n  constructor() {\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n  }\n\n\n  login() {\n    this.auth0.authorize();\n  }\n\n  handleAuthentication() {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        this.setSession(authResult);\n        history.replace('/content');\n      } else if (err) {\n        history.replace('/content');\n        console.log(err);\n        alert(`Error: ${err.error}. Check the console for further details.`);\n      }\n    });\n  }\n\n  setSession(authResult) {\n    // Set the time that the access token will expire at\n    let expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime());\n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('id_token', authResult.idToken);\n    localStorage.setItem('sub', authResult.idTokenPayload.sub);\n    localStorage.setItem('expires_at', expiresAt);\n    // navigate to the home route\n    history.replace('/');\n  }\n\n  logout() {\n    // Clear access token and ID token from local storage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('expires_at');\n    // navigate to the home route\n    history.replace('/');\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the\n    // access token's expiry time\n    let expiresAt = JSON.parse(localStorage.getItem('expires_at'));\n    return new Date().getTime() < expiresAt;\n  }\n}\n","import React from 'react';\nimport { Route, Router } from 'react-router-dom';\nimport App from './App';\nimport Content from './Content';\nimport Callback from './Callback/Callback';\nimport Auth from './Auth/Auth';\nimport history from './history';\nimport { ApolloClient, InMemoryCache, HttpLink } from 'apollo-boost';\nimport { ApolloProvider } from \"react-apollo\";\nimport { setContext } from 'apollo-link-context';\nimport { createHttpLink } from 'apollo-link-http';\nimport { vars } from './env';\n\nconst httpLink = new createHttpLink({\n  uri: vars.GRAPHQL_ENDPOINT,\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    }\n  }\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache({\n    addTypename: false\n  })\n});\n\nconst provideClient = (component) => {\n  return (\n    <ApolloProvider client={client}>\n      {component}\n    </ApolloProvider>\n  );\n};\n\nconst auth = new Auth();\n\nconst handleAuthentication = ({location}) => {\n  if (/access_token|id_token|error/.test(location.hash)) {\n    auth.handleAuthentication();\n  }\n}\n\nexport const makeMainRoutes = () => {\n  return (\n      <Router history={history}>\n        <div>\n          <Route path=\"/\" render={(props) => provideClient(<App auth={auth} {...props} />)}/>\n          <Route path=\"/content\" render={(props) => provideClient(<Content auth={auth} {...props} />)}/>\n          <Route path=\"/callback\" render={(props) => {\n            handleAuthentication(props);\n            return <Callback {...props} />\n          }}/>\n        </div>\n      </Router>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { makeMainRoutes } from './routes';\n\nconst routes = makeMainRoutes();\n\nReactDOM.render(\n  routes,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}